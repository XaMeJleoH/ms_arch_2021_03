{
	"info": {
		"_postman_id": "f343fb8f-e4bf-4a55-930e-e8ddc859f2a8",
		"name": "hw09-saga - tests - ingress",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Успешный процесс создания заказа",
			"item": [
				{
					"name": "Создание заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"idempotencyKey\", pm.variables.replaceIn('{{$guid}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание заказа\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.parse\r",
									"});\r",
									"\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"orderId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderName\": \"4343\",\r\n    \"amount\": \"232.3\",\r\n    \"success\":true,\r\n    \"idempotencyKey\": \"{{idempotencyKey}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа в процессе\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('IN_PROGRESS');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Оплата заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешная оплата\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"paymentId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderId\": \"{{orderId}}\",\r\n    \"premium\": \"232.2\",\r\n    \"successPay\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус оплаты",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса оплаты\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус оплаты успешный\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('FINISH');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/payment/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание резерва на складе",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание резерва на складе\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"reserveWarehouseId\", response);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"paymentId\": \"{{paymentId}}\",\r\n    \"orderName\": \"Massage\",\r\n    \"successReserve\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/warehouse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"warehouse"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус резерва на складе",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса резерва на складе\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус успешного резерва на складе\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('FINISH');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/warehouse/{{reserveWarehouseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"warehouse",
								"{{reserveWarehouseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание резерва отправки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное резервирование отправки\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"shipmentId\", response);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderId\": {{orderId}},\r\n    \"reserveWarehouseId\": {{reserveWarehouseId}},\r\n    \"address\": \"City Moscow\",\r\n    \"successReserve\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shipment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус отправки заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса резерва отправки\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус успешного резерва отправки\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('FINISH');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/shipment/{{shipmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipment",
								"{{shipmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Финальный статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа - закончен\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('FINISH');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Заказ отменен, по ошибке отправки",
			"item": [
				{
					"name": "Создание заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"idempotencyKey\", pm.variables.replaceIn('{{$guid}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание заказа\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.parse\r",
									"});\r",
									"\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"orderId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderName\": \"4343\",\r\n    \"amount\": \"232.3\",\r\n    \"success\":true,\r\n    \"idempotencyKey\": \"{{idempotencyKey}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа в процессе\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('IN_PROGRESS');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Оплата заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешная оплата\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"paymentId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderId\": \"{{orderId}}\",\r\n    \"premium\": \"232.2\",\r\n    \"successPay\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус оплаты",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса оплаты\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус оплаты успешный\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('FINISH');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/payment/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание резерва на складе",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание резерва на складе\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"reserveWarehouseId\", response);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"paymentId\": \"{{paymentId}}\",\r\n    \"orderName\": \"Massage\",\r\n    \"successReserve\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/warehouse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"warehouse"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус резерва на складе",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса резерва на складе\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус успешного резерва на складе\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('FINISH');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/warehouse/{{reserveWarehouseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"warehouse",
								"{{reserveWarehouseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание резерва отправки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ошибка при резервировании отправки\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"shipmentId\", response);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderId\": {{orderId}},\r\n    \"reserveWarehouseId\": {{reserveWarehouseId}},\r\n    \"address\": \"City Moscow\",\r\n    \"successReserve\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shipment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Финальный статус резерва на складе",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса резерва на складе\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус с отменой резерва на складе\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('CANCELED');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/warehouse/{{reserveWarehouseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"warehouse",
								"{{reserveWarehouseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Финальный статус оплаты",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса оплаты\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус отменённой оплаты\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('CANCELED');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/payment/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Финальный статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа - отменён\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('CANCELED');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Заказ отменен, по ошибке резерва на складе",
			"item": [
				{
					"name": "Создание заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"idempotencyKey\", pm.variables.replaceIn('{{$guid}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание заказа\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.parse\r",
									"});\r",
									"\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"orderId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderName\": \"4343\",\r\n    \"amount\": \"232.3\",\r\n    \"success\":true,\r\n    \"idempotencyKey\": \"{{idempotencyKey}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа в процессе\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('IN_PROGRESS');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Оплата заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешная оплата\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"paymentId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderId\": \"{{orderId}}\",\r\n    \"premium\": \"232.2\",\r\n    \"successPay\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус оплаты",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса оплаты\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус оплаты успешный\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('FINISH');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/payment/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание резерва на складе",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ошибка при создании резерва на складе\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"reserveWarehouseId\", response);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"paymentId\": \"{{paymentId}}\",\r\n    \"orderName\": \"Massage\",\r\n    \"successReserve\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/warehouse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"warehouse"
							]
						}
					},
					"response": []
				},
				{
					"name": "Финальный статус оплаты",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса оплаты\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус отменённой оплаты\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('CANCELED');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/payment/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Финальный статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа - отменён\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('CANCELED');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Заказ отменен, из-за ошибки на оплате",
			"item": [
				{
					"name": "Создание заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"idempotencyKey\", pm.variables.replaceIn('{{$guid}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание заказа\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.parse\r",
									"});\r",
									"\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"orderId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderName\": \"4343\",\r\n    \"amount\": \"232.3\",\r\n    \"success\":true,\r\n    \"idempotencyKey\": \"{{idempotencyKey}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа в процессе\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('IN_PROGRESS');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Оплата заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ошибка на оплате\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"paymentId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderId\": \"{{orderId}}\",\r\n    \"premium\": \"232.2\",\r\n    \"successPay\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Финальный статус заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение статуса\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Статус заказа - отменён\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.eql('CANCELED');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Заказ не был создан, из-за ошибки при создании заказа",
			"item": [
				{
					"name": "Создание заказа",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"idempotencyKey\", pm.variables.replaceIn('{{$guid}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ошибка при создании заказа\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"    pm.response.parse\r",
									"});\r",
									"\r",
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"orderId\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 325,\r\n    \"orderName\": \"4343\",\r\n    \"amount\": \"232.3\",\r\n    \"success\":false,\r\n    \"idempotencyKey\": \"{{idempotencyKey}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "idempotencyKey",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		},
		{
			"key": "paymentId",
			"value": ""
		},
		{
			"key": "reserveWarehouseId",
			"value": ""
		},
		{
			"key": "shipmentId",
			"value": ""
		}
	]
}